{"version":3,"file":"static/js/853.5998346e.chunk.js","mappings":"sMACA,GAAgB,MAAQ,uBAAuB,QAAU,yBAAyB,MAAQ,wB,mBCQ7EA,EAAa,SAACC,GACvB,OACI,gBAAKC,UAAWC,EAAAA,MAAhB,UAAyB,SAAC,KAAD,CAASC,GAAI,WAAWH,EAAMI,GAA9B,SAAmCJ,EAAMK,UCH7DC,EAAU,SAACN,GACpB,OACI,gBAAKC,UAAWC,EAAAA,MAAhB,SACKF,EAAMO,W,mBC8BnB,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KA7BmB,SAACC,GACpB,MAAO,CACHC,eAAeD,EAAMC,mBAYH,SAACC,GACvB,MAAO,CAEHC,QAAQ,SAACC,GACLF,GAASG,EAAAA,EAAAA,GAA4BD,SAY7CE,EAAAA,EAFJ,EC/BwB,SAAChB,GAKrB,IAOJ,GAAiCiB,EAAAA,EAAAA,UAAS,IAA1C,eAAOH,EAAP,KAAkBI,EAAlB,KAMI,OAAS,iBAAKjB,UAAWC,EAAAA,MAAhB,WACD,gBAAKD,UAAWC,EAAAA,QAAhB,SAEKF,EAAMW,eAAeQ,KAAKC,KAAI,SAACC,GAAM,OAClC,SAACtB,EAAD,CAAYM,KAAMgB,EAAEhB,KAAMD,GAAIiB,EAAEjB,WAQxC,4BACI,gBAAKH,UAAWC,EAAAA,SAAhB,SAGKF,EAAMW,eAAeJ,QAAQa,KAAI,SAACE,GAC/B,OACI,SAAChB,EAAD,CAASC,QAASe,EAAEf,gBAMhC,4BACI,kBAAOgB,SA7BH,SAACC,GACrBN,EAAcM,EAAEC,cAAcC,QA4BqBA,MAAOZ,KAC1C,mBAAQa,QAvCR,WAEZ3B,EAAMa,QAAQC,GAEdI,EAAc,KAmCF","sources":["webpack://samurai-way/./src/Components/Dialog/Dialogs.module.css?6006","Components/Dialog/DialogItem/DialogItem.tsx","Components/Dialog/Message/Message.tsx","Components/Dialog/DialogsContainer.tsx","Components/Dialog/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"items\":\"Dialogs_items__jqtR6\",\"dialogs\":\"Dialogs_dialogs__j3Tpt\",\"style\":\"Dialogs_style__x5UHN\"};","import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemType = {\n    name:string\n    id:number\n}\n\nexport const DialogItem = (props:DialogItemType)=> {\n    return(\n        <div className={s.style}><NavLink to={'dialogs/'+props.id}>{props.name}</NavLink></div>\n    )\n}\n\n","import s from \"../Dialogs.module.css\";\nimport React from \"react\";\n\n\ntype MessageType = {\n    message:string\n}\n\nexport const Message = (props:MessageType)=> {\n    return (\n        <div className={s.style}>\n            {props.message}\n        </div>\n    )\n}","import {AddPostDialogsActionCreator, InitializationStateDialogType} from \"../../Redux/dialogsReducer\";\nimport {AppDispatchType, StoreType} from \"../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Dialogs} from \"./Dialogs\";\nimport {compose} from \"redux\";\nimport React from \"react\";\nimport withAuthRedirect from \"../Hoc/WithAuthRedirect\";\n\n\ntype mapStateToPropsType ={\n    dialogsReducer:InitializationStateDialogType\n}\n\nconst mapStateToProps =(state:StoreType):mapStateToPropsType=> {\n    return {\n        dialogsReducer:state.dialogsReducer,\n\n\n    }\n}\n\ntype mapDispatchToPropsType ={\n    addPost:(inputValue:string)=>void\n}\n\n\n\nconst mapDispatchToProps =(dispatch:AppDispatchType):mapDispatchToPropsType=> {\n    return {\n\n        addPost:(inputValue:string)=> {\n            dispatch(AddPostDialogsActionCreator(inputValue))\n        },\n\n    }\n}\n\nexport type MyDialogType = mapDispatchToPropsType & mapStateToPropsType\n\n\n\nexport default compose <React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogs)\n\n\n\n","import React, {ChangeEvent, useState} from 'react';\nimport  s from './Dialogs.module.css'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {MyDialogType} from \"./DialogsContainer\";\n\n\n\n\n\nexport  const Dialogs = (props:MyDialogType) => {\n\n\n\n\n    const AddPost = ()=> {\n    // if(newPost.current){props.AddPostDialogs(newPost.current?.value)}\n        props.addPost(inputValue)\n        // props.dispatch(AddPostDialogsActionCreator(inputValue))\n        setInputValue('')\n}\n\nconst [inputValue,setInputValue]=useState('')\n\nconst onChangeHandler = (e:ChangeEvent<HTMLInputElement>)=> {\n    setInputValue(e.currentTarget.value)\n\n}\n    return ( <div className={s.items}>\n            <div className={s.dialogs}>\n\n                {props.dialogsReducer.data.map((d)=>{ return (\n                    <DialogItem name={d.name} id={d.id}/>\n                )\n\n                })}\n\n\n\n            </div>\n            <div>\n                <div className={s.messages}>\n\n\n                    {props.dialogsReducer.message.map((m)=>{\n                        return (\n                            <Message message={m.message}/>\n                        )\n                    })}\n\n\n                </div>\n                <div>\n                    <input onChange={onChangeHandler}  value={inputValue} />\n                    <button onClick={AddPost}>Add</button>\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\n"],"names":["DialogItem","props","className","s","to","id","name","Message","message","compose","connect","state","dialogsReducer","dispatch","addPost","inputValue","AddPostDialogsActionCreator","withAuthRedirect","useState","setInputValue","data","map","d","m","onChange","e","currentTarget","value","onClick"],"sourceRoot":""}